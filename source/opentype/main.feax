#
#	File: main.feax
#
# Main FEA code for Awami Nastaliq

#	This file is part of the Awami Nastaliq font 
#	(https://software.sil.org/awami) and is 
#	Copyright (c) 2014-2024 SIL Global (https://www.sil.org/),
#	with Reserved Font Names "Awami" and "SIL".
#
#	This Font Software is licensed under the SIL Open Font License,
#	Version 1.1.
#
#	You should have received a copy of the license along with this Font Software.
#	If this is not the case, go to (https://openfontlicense.org/) for all the
#	details including an FAQ.

languagesystem latn dflt ;
languagesystem arab dflt;

#========== CLASSES ==========

@NuqtaUpper = [ _dot1u _dot2u  _dot2vu _dot3u _dot3uD _dot4u];
@NuqtaLower = [_dot1l _dot2l _dot2vl _dot3l _dot4l];
@Nuqta = [@NuqtaUpper @NuqtaLower];
@NuqtaLikeUpper = [@NuqtaUpper _hamza _hamza.arabic _smallTah _smallV _kafSquiggle _smallThreeAbove _smallTwoAbove _wasla _wavyHamza];
@NuqtaLikeLower = [@NuqtaLower _hehHook.small _smallTahBelow _smallVBelow _smallTah2dotsBelow _smallVinvBelow _smallFourBelow];
@NuqtaLike = [@NuqtaLikeUpper @NuqtaLikeLower];

@DiacUpper = [@_nUpper @_mUpper @_hamzaUpper @_tahUpper @_digitUpper @_honorific];
@DiacLower = [@_n1Lower @_n23Lower @_mLower @_hehhook @_tahLower @_ring @_tahLower @_hamzaLower];

# gafStroke, graf, _kafTop_bj

@AllUpper = [@NuqtaLikeUpper @DiacUpper];
@AllLower = [@NuqtaLikeLower @DiacLower];
@AllMiddle = [@_squiggle @_bar];

#========== LOOKUPS ==========

# The following three lookups change "RenderingUnknown" to "RenderingOpenType"
lookup _FontCheck_Unknow {
  lookupflag IgnoreMarks;
    sub [U n k o w ] by [O p e T y];
} _FontCheck_Unknow ;

lookup _FontCheck_n {
  lookupflag IgnoreMarks;
    sub n by p e;
} _FontCheck_n ;

lookup FontCheck {
  lookupflag IgnoreMarks ;
    sub [R] e n d e r i n g
      U' lookup _FontCheck_Unknow
      n' lookup _FontCheck_Unknow
      k' lookup _FontCheck_Unknow
      n'
      o' lookup _FontCheck_Unknow
      w' lookup _FontCheck_Unknow
      n' lookup _FontCheck_n;
} FontCheck ;

#========== GSUB rules ==========

# Separate bases from nuqtas
feature ccmp {

lookup FontCheck;		# both latn and arab

lookup DecomposeBases {
	sub		absBeh			by	absDotlessBeh		_dot1l;
	sub		absTeh			by	absDotlessBeh		_dot2u;
	sub		absTheh			by	absDotlessBeh		_dot3u;
	sub		absPeh			by	absDotlessBeh		_dot3l;
	sub		absNoon			by	absDotlessBeh		_dot1u;
	sub		nlqChotiyeh	by	absDotlessBeh		_dot2l;
	sub		absJeem			by	absHah					_dot1l;
	sub		absKhah			by	absHah					_dot1u;
	sub		absSheen		by	absSeen					_dot3u;
	sub		absDad			by  absSad					_dot1u;
	sub		absZah			by	absTah					_dot1u;
	sub		absGhain		by	absAin					_dot1u;
	sub		absFeh			by	absDotlessFeh		_dot1u;
	sub		absQaf			by	absDotlessFeh		_dot2u;
} DecomposeBases;

} ccmp;


# Recompose isolates:
feature isol {
	sub 	absDotlessBeh		_dot1l		by		absBeh;
	sub		absDotlessBeh		_dot2u		by		absTeh;
	sub		absDotlessBeh		_dot3u		by		absTheh;
	sub 	absDotlessBeh		_dot3l		by		absPeh;
	sub		absDotlessBeh		_dot1u		by		absNoon;
	sub		absDotlessBeh		_dot2l		by		nlqChotiyeh;
	sub		absHah					_dot1l		by		absJeem;
	sub		absHah					_dot1u		by		absKhah;
	sub		absSeen					_dot3u		by		absSheen;
	sub		absSad					_dot1u		by		absDad;
	sub		absTah					_dot1u		by		absZah;
	sub		absAin					_dot1u		by		absGhain;
	sub		absDotlessFeh		_dot1u		by		absFeh;
	sub		absDotlessFeh		_dot2u		by		absQaf;
} isol;


feature fina {

lookup RightFinals1 {
	sub		absAlef			by 		absAlefFin;
	sub		nlqBariyeh	by		nlqBariyehFin;
	sub		absWaw			by		absWawFin;
	sub		absReh			by		absRehFin;
} RightFinals1;

lookup RightFinals2 {
	sub		absDotlessFeh		_dot2u	by		absQafFin;
	sub		absDotlessBeh		_dot1u	by		absNoonFin;
	sub		absDotlessBeh		_dot2l	by		nlqChotiyehFin;
} RightFinals2;

lookup DualFinals {
	sub			@DualPostCcmp_sub		by		@DualFinals_sub;
} DualFinals;

} fina;					# end of feature


feature medi {

lookup MedialForms {
	lookupflag IgnoreMarks;
	sub		@DualPostCcmp_sub		by		@MedDefault_sub;
} MedialForms;

lookup InsertHehHook {
	sub absHehGoalMed by absHehGoalMed _hehHook.small;	
} InsertHehHook;

} medi;


feature init {

lookup InitialForms {
	lookupflag IgnoreMarks;

	sub		@DualPostCcmp_sub		by		@IniDefault_sub;
} InitialForms;

} init;


feature rlig {

lookup BasicContextuals {
	lookupflag IgnoreMarks;
	
	# alef, lam, kaf, and dal use the default shapes
	
	sub @IniDefault_sub' absBehFin		by	@IniBeM2F_sub;
	
	sub @IniDefault_sub' @BehForms		by	@IniBe_sub;
	sub	@MedDefault_sub' @BehForms		by	@MedBe_sub;
	# beh shaping is continued below
	
	sub @IniDefault_sub' @JeemForms		by	@IniJm_sub;
	sub	@MedDefault_sub' @JeemForms		by	@MedJm_sub;
	
	sub @IniDefault_sub' @SeenForms		by	@IniSn_sub;
	sub	@MedDefault_sub' @SeenForms		by	@MedSn_sub;
		
	sub @IniDefault_sub' @SadForms		by	@IniSd_sub;
	sub	@MedDefault_sub' @SadForms		by	@MedSd_sub;
		
	sub @IniDefault_sub' @TahForms		by	@IniTa_sub;
	sub	@MedDefault_sub' @TahForms		by	@MedTa_sub;
			
	sub @IniDefault_sub' @AinForms		by	@IniAi_sub;
	sub	@MedDefault_sub' @AinForms		by	@MedAi_sub;

	sub @IniDefault_sub' @FehForms		by	@IniFe_sub;
	sub	@MedDefault_sub' @FehForms		by	@MedFe_sub;
		
	sub @IniDefault_sub' @MeemForms		by	@IniMm_sub;
	sub	@MedDefault_sub' @MeemForms		by	@MedMm_sub;
	
	sub @IniDefault_sub' @HehDoForms	by	@IniHd_sub;
	sub	@MedDefault_sub' @HehDoForms	by	@MedHd_sub;
	
	sub @IniDefault_sub' absHehGoalFin	by @IniHgF_sub;
	sub @MedDefault_sub' absHehGoalFin	by @MedHgF_sub;
	
	sub @IniDefault_sub' @HehGoalForms	by	@IniHgM_sub;
	sub	@MedDefault_sub' @HehGoalForms	by	@MedHgM_sub;
	
	sub @IniDefault_sub' absRehFin			by	@IniRe_sub;
	sub	@MedDefault_sub' absRehFin			by	@MedRe_sub;
	
	sub @IniDefault_sub' absNoonFin			by	@IniNn_sub;
	sub	@MedDefault_sub' absNoonFin			by	@MedNn_sub;
	
	sub @IniDefault_sub' nlqChotiyehFin			by	@IniCh_sub;
	sub	@MedDefault_sub' nlqChotiyehFin			by	@MedCh_sub;
	
	sub @IniDefault_sub' nlqBariyehFin			by	@IniBy_sub;
	sub	@MedDefault_sub' nlqBariyehFin			by	@MedBy_sub;
	
	sub @IniDefault_sub' [absQafFin absWawFin]	by	@IniQf_sub;
	sub	@MedDefault_sub' [absQafFin absWawFin]	by	@MedQf_sub;
	
	sub [absLamIni absLamMed]' absAlefFin		by	[absLamIni.al absLamMed.al];
	
} BasicContextuals;			# end of lookup


# Here we assume that glyphs before beh have their .be form.
lookup BehContextuals {
	lookupflag IgnoreMarks RightToLeft;
	
	# Use rsub to use backwards logic so that the glyphs at the are processed first.
	
	rsub absBehMed.be'		absBehFin			by	absBehMed.beF;
	
	# Alternate teeth:
	rsub absBehMed.be'		@PostBeM1			by	absBehMed.beM1;		# high tooth
	rsub absBehMed.be'		@PostBeM2			by	absBehMed.beM2;		# low tooth
	
	# Initial beh:
	rsub absBehIni.be'		@PostBeM1			by	absBehIni.beM1;
	rsub absBehIni.be'		@PostBeM2			by	absBehMed.beM2;
	
	# Finally handle the first item in the chain:
	rsub @IniBe_sub'   absBehMed.beM1		by	@IniBeM2_sub;
	rsub @IniBe_sub'   absBehMed.beM2		by	@IniBeM1_sub;
	rsub @MedBe_sub'   absBehMed.beM1		by	@MedBeM2_sub;		# these two rules must be last, so that
	rsub @MedBe_sub'   absBehMed.beM2		by	@MedBeM1_sub;		# they only get triggered by non-behs

} BehContextuals;					# end of lookup

lookup MeemContextuals {
	lookupflag IgnoreMarks;
	
	# Alternate meem occurs before alef, dal, and lam unless it follows a lam.
	sub @PreMm_alt	absMeemMed'		@PostMm_alt		by		absMeemMed._alt;

} MeemContextuals;				# end of lookup

lookup PreMeemAlt {
	lookupflag IgnoreMarks;
	
	sub @IniMm_sub'	  absMeemMed._alt		by		@IniMmX_sub;
	sub @MedMm_sub'		absMeemMed._alt		by		@MedMmX_sub;

} PreMeemAlt;


lookup SeenContextuals {
	lookupflag IgnoreMarks;
	
	sub [absSeenIni.sn absSeenMed.sn absSeenMed.sn_sn]		absSeenMed.sn'	@SeenForms		by	absSeenMed.sn_sn;
	
} SeenContextuals;


lookup FinalContextuals {
	lookupflag IgnoreMarks;
	
	sub @PreQw_stfh  [absQafFin absWawFin]' by  [absQafFin._stfh absWawFin._stfh];
	
	sub @PreBe_bfkl	absBehFin' by absBehFin._bfkl;
	
	sub @PreChF_bfkl nlqChotiyehFin' by nlqChotiyehFin._bfkl;
	
	#sub @PreHgF_stfh absHehGoalFin' by absHehGoalFin._bfkl;  -- no longer used
	
	sub @PreReF_jkl absRehFin' by absRehFin._jkl;
	sub @PreReF_hgM absRehFin' by absRehFin._hgM;
	
	sub @LamForms		absAlefFin'		by	absAlefFin._lm;

} FinalContextuals;					# end of lookup

} rlig;		# end of feature


#========== GPOS rules ==========



feature mark {

# There is ambiguity and overlap among the various attachment classes, so we do the most
# general attachments first, and put the more specific cases last so they override.

# In case the base doesn't have 'm' APs, use the 'n' ones. This will be overridden if possible.
lookup AttachLowerDiacsLikeNuqtas {
		lookupflag UseMarkFilteringSet @AllLower;
		pos		base @n1Lower			mark @_mLower;
} AttachLowerDiacsLikeNuqtas;

lookup AttachUpperDiacsLikeNuqtas {
		lookupflag UseMarkFilteringSet @AllUpper;
		pos		base @nUpper			mark @_mUpper;
} AttachUpperDiacsLikeNuqtas;

lookup AttachLower {
		lookupflag UseMarkFilteringSet @AllLower;
    pos		base @n1Lower			mark @_n1Lower;
    pos		base @n23Lower		mark @_n23Lower;
		pos		base @hehhook			mark @_hehhook;
		pos		base @hamzaLower	mark @_hamzaLower;
		pos		base @mLower			mark @_mLower;
} AttachLower;

lookup AttachMiddle {
		lookupflag UseMarkFilteringSet @AllMiddle;
		pos		base @squiggle		mark @_squiggle;
		pos		base @bar					mark @_bar;
} AttachMiddle;

lookup AttachUpper {
		lookupflag UseMarkFilteringSet @AllUpper;
    pos		base @nUpper  		mark @_nUpper;
} AttachUpper;

lookup AttachUpper2 {
		lookupflag UseMarkFilteringSet @AllUpper;
		pos		base @alef				mark @_mUpper;
		pos		base @mUpper			mark @_mUpper;
		pos		base @tahUpper		mark @_tahUpper;
		pos		base @hamzaUpper	mark @_hamzaUpper;
} AttachUpper2;

lookup AttachUpper3 {
		pos		base @honorific		mark @_honorific;
} AttachUpper3;

# Special cases go last so that they override:
lookup AttachAlefDiacToYeh {
		lookupflag UseMarkFilteringSet @AllUpper;
		pos		base @alef				mark @_mUpper;
} AttachAlefDiacToYeh;

lookup AttachAlefDiacToLam {
		lookupflag UseMarkFilteringSet @AllUpper;
		# The rules below were copied from the autogenerated FEA file autogenerated from the rule below:
		# pos		base @nUpper			mark @_mUpperLam;
		# This is necessary to limit the rules to lams.
		# TODO: simplify this by adding a distinct AP to the lam forms duplicating nUpper.
		pos base absLamFin <anchor 1561 2671> mark @_mUpperLam;
		pos base absLamFin._kfTall <anchor 1565 3171> mark @_mUpperLam;
		pos base absLamFin_short <anchor 1555 2471> mark @_mUpperLam;
		pos base absLamIni <anchor 584 2148> mark @_mUpperLam;
		pos base absLamIni.ai <anchor 602 2718> mark @_mUpperLam;
		pos base absLamIni.al <anchor 553 2173> mark @_mUpperLam;
		pos base absLamIni.be <anchor 338 2527> mark @_mUpperLam;
		pos base absLamIni.beM1 <anchor 660 2677> mark @_mUpperLam;
		pos base absLamIni.beM2 <anchor 486 2255> mark @_mUpperLam;
		pos base absLamIni.behg <anchor 539 2148> mark @_mUpperLam;
		pos base absLamIni.benn <anchor 554 2848> mark @_mUpperLam;
		pos base absLamIni.bere <anchor 338 2255> mark @_mUpperLam;
		pos base absLamIni.by <anchor 797 2179> mark @_mUpperLam;
		pos base absLamIni.ch <anchor 204 2625> mark @_mUpperLam;
		pos base absLamIni.fe <anchor 651 2180> mark @_mUpperLam;
		pos base absLamIni.hd <anchor 119 2111> mark @_mUpperLam;
		pos base absLamIni.hgF <anchor 639 2006> mark @_mUpperLam;
		pos base absLamIni.hgM <anchor 207 2151> mark @_mUpperLam;
		pos base absLamIni.jm <anchor 825 3298> mark @_mUpperLam;
		pos base absLamIni.mm <anchor 282 2486> mark @_mUpperLam;
		pos base absLamIni.nn <anchor 395 2841> mark @_mUpperLam;
		pos base [absLamIni.qf absLamIni.snsn] <anchor 350 2442> mark @_mUpperLam;
		pos base absLamIni.re <anchor 461 2461> mark @_mUpperLam;
		pos base absLamIni.sd <anchor 980 2994> mark @_mUpperLam;
		pos base absLamIni.sn <anchor 283 2998> mark @_mUpperLam;
		pos base absLamIni.ta <anchor 1029 2493> mark @_mUpperLam;
		pos base [absLamIni_allah1 absLamMed_allah1] <anchor 524 2092> mark @_mUpperLam;
		pos base absLamIni_short <anchor 754 1618> mark @_mUpperLam;
		pos base absLamMed <anchor 586 2081> mark @_mUpperLam;
		pos base absLamMed.ai <anchor 706 2460> mark @_mUpperLam;
		pos base absLamMed.al <anchor 555 2183> mark @_mUpperLam;
		pos base absLamMed.be <anchor 317 2126> mark @_mUpperLam;
		pos base absLamMed.beF <anchor 589 2245> mark @_mUpperLam;
		pos base absLamMed.beM1 <anchor 668 2599> mark @_mUpperLam;
		pos base absLamMed.beM2 <anchor 503 2329> mark @_mUpperLam;
		pos base absLamMed.be_kfTall <anchor 337 2726> mark @_mUpperLam;
		pos base absLamMed.behg <anchor 564 2119> mark @_mUpperLam;
		pos base absLamMed.benn <anchor 581 2271> mark @_mUpperLam;
		pos base absLamMed.bere <anchor 342 2286> mark @_mUpperLam;
		pos base absLamMed.by <anchor 889 2377> mark @_mUpperLam;
		pos base absLamMed.by_kfTall <anchor 869 2977> mark @_mUpperLam;
		pos base absLamMed.ch <anchor 360 2312> mark @_mUpperLam;
		pos base absLamMed.ch_gfTall <anchor 360 3362> mark @_mUpperLam;
		pos base absLamMed.fe <anchor 603 2304> mark @_mUpperLam;
		pos base absLamMed.hd <anchor 201 2249> mark @_mUpperLam;
		pos base absLamMed.hgF <anchor 574 1969> mark @_mUpperLam;
		pos base absLamMed.hgM <anchor 188 2113> mark @_mUpperLam;
		pos base absLamMed.jm <anchor 983 2234> mark @_mUpperLam;
		pos base absLamMed.mm <anchor 517 2461> mark @_mUpperLam;
		pos base absLamMed.nn <anchor 496 2423> mark @_mUpperLam;
		pos base [absLamMed.qf absLamMed.snsn] <anchor 348 2554> mark @_mUpperLam;
		pos base absLamMed.re <anchor 476 2161> mark @_mUpperLam;
		pos base absLamMed.sd <anchor 983 2427> mark @_mUpperLam;
		pos base absLamMed.sn <anchor 321 2302> mark @_mUpperLam;
		pos base absLamMed.ta <anchor 954 2072> mark @_mUpperLam;
		pos base absLamMed_allah2 <anchor 478 1730> mark @_mUpperLam;
		pos base absLamMed_short <anchor 756 1641> mark @_mUpperLam;
} AttachAlefDiacToLam;

} mark;


@MarkFilter_mUpper	= [@mUpper_MarkBase @_mUpper];
@MarkFilter_mLower	= [@mLower_MarkBase @_mLower];
@MarkFilter_ring		= [@ring_MarkBase @_ring];

feature mkmk {

lookup AttMark2MarkUpper {
		lookupflag UseMarkFilteringSet @MarkFilter_mUpper;
		pos		mark @mUpper_MarkBase		mark @_mUpper;
} AttMark2MarkUpper;

lookup AttMark2MarkLower {
		lookupflag UseMarkFilteringSet @MarkFilter_mLower;
		pos		mark @mLower_MarkBase		mark @_mLower;
} AttMark2MarkLower;

lookup AttRing2Mark {
		lookupflag UseMarkFilteringSet @MarkFilter_ring;
		pos		mark @ring_MarkBase		mark @_ring;
} AttRing2Mark;

} mkmk;


feature curs {

lookup BasicConnections {
	lookupflag IgnoreMarks RightToLeft;
	pos cursive @entry @exit;
} BasicConnections;
	
} curs;			# end of feature



# Bariyeh width: 2600
@Zero = []; # < 100
# 100-500
@NarrowIni = [absBehIni.be];
@NarrowMed = [absJeemMed.by absJeemMed.jm];
# 500 - 900
@MediumIni = [absBehIni.sn absBehIni.hgM
		absJeemIni.sn absFehIni.by];
@MediumMed = [absBehMed.beF absJeemMed.sd 
		absSadMed absMeemMed.by absHehGoalMed.by];
# 900 - 1300
@WideIni = [absBehIni.by absJeemIni.by absTahIni.by absAinIni.by absLamIni.by absLamMed.by absMeemIni.by absHehGoalIni.by
		absBehIni.jm absBehIni.mm absSeenIni.jm];
@WideMed = [absBehMed.jm absBehMed.by];
# > 1300
@ExtraIni = [absSeenIni.by absSeenIni.jm absSadIni.by absSadIni.jm absKehehIni.by absHehDoachashmeeIni.by];
@ExtraMed = [absSeenMed.by absSadMed.by];


feature dist {

lookup BariyehKern {
		lookupflag IgnoreMarks;
		
		pos @WideIni' 600		@NarrowMed	@NarrowMed	@NarrowMed	nlqBariyehFin;
				
		pos @NarrowIni' 1700		@NarrowMed		nlqBariyehFin;
		pos @NarrowIni' 1200		@MediumMed		nlqBariyehFin; 
		pos @NarrowIni' 900			@WideMed			nlqBariyehFin; 
		pos @NarrowIni' 700			@ExtraMed			nlqBariyehFin;
		
		pos @MediumIni' 1300		@NarrowMed	nlqBariyehFin;
		pos @MediumIni' 800			@MediumMed	nlqBariyehFin;
		pos @MediumIni' 500			@WideMed 		nlqBariyehFin;
		pos @MediumIni' 300			@ExtraMed		nlqBariyehFin;
		
		pos @WideIni' 900			@NarrowMed nlqBariyehFin;
		pos @WideIni' 400			@MediumMed nlqBariyehFin; 
		pos @WideIni' 100			@WideMed 		nlqBariyehFin; 
		pos @WideIni' 0				@ExtraMed nlqBariyehFin;
		
		pos @ExtraIni' 600			@NarrowMed nlqBariyehFin;
		pos @ExtraIni' 100			@MediumMed nlqBariyehFin; 
		pos @ExtraIni' 0				@WideMed nlqBariyehFin; 
		pos @ExtraIni' 0				@ExtraMed nlqBariyehFin;
		
		pos @NarrowIni' 2300 nlqBariyehFin;
		pos @MediumIni' 1850 nlqBariyehFin; 
		pos @WideIni'   1500 nlqBariyehFin; 
		pos @ExtraIni'  1300 nlqBariyehFin;

} BariyehKern;

} dist;


feature kern {


} kern;