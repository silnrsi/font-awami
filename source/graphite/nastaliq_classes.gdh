//
//	File: nastaliq_classes.gdh
//
//	Graphite classes for Awami beyond the basic ones

/*
	This file is part of the Awami Nastaliq font 
	(http://software.sil.org/awami) and is 
	Copyright (c) 2014-2018 SIL International (http://www.sil.org/),
	with Reserved Font Names "Awami" and "SIL".

	This Font Software is licensed under the SIL Open Font License,
	Version 1.1.

	You should have received a copy of the license along with this Font Software.
	If this is not the case, go to (http://scripts.sil.org/OFL) for all the
	details including an FAQ.
*/


table(glyph) {MUnits = 2048};

cDot1l = (g__dot1l, g__dot1l_small);
cDot1u = (g__dot1u, g__dot1u_small);
cDot2l = (g__dot2l, g__dot2l_small);
cDot2u = (g__dot2u, g__dot2u_small);
cDot2vl = (g__dot2vl, g__dot2vl_small);
cDot2vu = (g__dot2vu, g__dot2vu_small);
cDot3l = (g__dot3l, g__dot3l_small);
cDot3u = (g__dot3u, g__dot3u_small);
cDot3uD = (g__dot3uD, g__dot3uD_small);
cDot4l = (g__dot4l, g__dot4l_small);
cDot4u = (g__dot4u, g__dot4u_small);

cHamzaAbove = (gHamzaAbove, g__wavyHamza);
cHamzaBelow = (gHamzaBelow, gWavyHamzaBelow, gHamzaBelowArabic);


/* Treated as European numbers by default, which is probably okay.
cEasternDigits = (gEasternZero, gEasternOne, gEasternTwo, gEasternThree, gEasternFour,
	gEasternFive, gEasternSix, gEasternSeven, gEasternEight, gEasternNine)
		{ dir = DIR_ARABICNUMBER };
*/

g_lrm = pseudo(postscript("space"), 0x200E);	// some data uses LRM incorrectly instead of ZWNJ to break context

g__noDot1u = pseudo(postscript("_dot1u"));  // no longer used
g__noDot2u = pseudo(postscript("_dot2u"));
g__noDot2l = pseudo(postscript("_dot2l"));
g__dot2l_tail = pseudo(postscript("_dot2l")) { mLowerS = point(0m,0m) }; // avoid spurious warning


// The version of the madda that is placed below the vowel - not currently used.
//gMaddaAbove_low = pseudo(postscript("absMaddaAbove"))
//	{ mUpperM = gMaddaAbove.mUpperM; mUpperS = gMaddaAbove.mUpperS; zeroM = point(0m, 0m) };

/////cno_showInv = (g_zeronojoin, g_zerojoin, g_zeroWidthNoBreakSpace, g_nobreakspace);

c_zeronojoin = (g_zeronojoin, g_zeronojoinShowInv);
c_zerojoin = (g_zerojoin, g_zerojoinShowInv);


cNuqtaUpper = (g__dot1u, g__dot2u, g__dot2vu, g__dot3u, g__dot3uD, g__dot4u,
	g__dot1u_small, g__dot2u_small, g__dot2vu_small, g__dot3u_small, g__dot3uD_small, g__dot4u_small) ;
cNuqtaLower = (g__dot1l, g__dot2l, g__dot2vl, g__dot3l, g__dot4l,
	g__dot1l_small, g__dot2l_small, g__dot2vl_small, g__dot3l_small, g__dot4l_small) ;
cNuqta = (cNuqtaUpper, cNuqtaLower) ;

cKafTopAltHt = ( g__kafIniTop_taller, g__kafIniTop_short, g__kafIniTop_shorter, g__kafIniTop_medshort,
	g__kafMedTop_short, g__kafMedTop_shorter, g__kafMedTop_tall,
	g__kafMedTop_medshort, g__kafTop_bj_short, g__kafTop_jm_tall, g__kafTop_by_tall
	g__gafIniTop_taller, g__gafIniTop_short, g__gafIniTop_shorter, 
	g__gafMedTop_short, g__gafMedTop_shorter, g__gafMedTop_tall,
	g__gafMedTop_medshort, g__gafTop_bj_short, g__gafTop_bj_tall);

cKafTop = (g__kafTop_null, cKafTopAltHt, g__kafTop_m_bogus);

// Vertical difference in height of kaf tops (for adjusting ngoeh nuqtas):
g__kafIniTop_taller { ktDelta = 250m };
g__gafIniTop_taller { ktDelta = 250m };
g__kafIniTop_short { ktDelta = -150m };
g__gafIniTop_short { ktDelta = -150m };
g__kafIniTop_shorter { ktDelta = -200m };
g__gafIniTop_shorter { ktDelta = -200m };
g__kafMedTop_tall { ktDelta = 150m };
g__gafMedTop_tall { ktDelta = 150m };
g__kafTop_jm_tall { ktDelta = 150m };
g__gafTop_bj_tall { ktDelta = 150m };
g__kafMedTop_short { ktDelta = -150m };
g__gafMedTop_short { ktDelta = -150m };
g__kafTop_bj_short { ktDelta = -150m };
g__gafTop_bj_short { ktDelta = -150m };
g__kafMedTop_shorter { ktDelta = -270m };
g__gafMedTop_shorter { ktDelta = -270m };
g__kafMedTop_medshort { ktDelta = 0m };
g__gafMedTop_medshort { ktDelta = 0m };
g__kafTop_m_bogus { ktDelta = 0m };
g__kafTop_null { ktDelta = 0m };
g__kafTop_by_tall { ktDelta = 0m }; // currently not used, just to avoid compilation error

// General classes of nuqta-like things (attached pieces that are considered an intrinsic part of the letter):
cNuqtaLikeUpper = (cNuqtaUpper, g__smallTah, g__hamza, gHamzaAbove, g__hamzaArabic, g_highHamza, g_highHamzaArabic,
	g__smallV, g__smallVinv,g__dot1u_smallTah, g__dot1u_smallV, g__dot1u_smallVKf, g__dot1u_smallTah, g__dot1u_smallTahKf,
	g__dot1u_ngMark, g__smallTah2dots, g__kafSquiggle, gPeshWaw, g__wavyHamza, g__dot2l__hamza, g__verticalStroke,
	cKafTop,
	//gMaddaAbove_low,
	g__gafStroke, g__gafStroke_long, // g__gafStroke_short
	g__smallTwoAbove, g__smallThreeAbove, g__smallFourAbove);
cNuqtaLikeLower = (cNuqtaLower, g__hehHook_small, g__attachedRing, g__ring,
	gHamzaBelow, gHamzaBelowArabic, g__smallTahBelow, gWavyHamzaBelow, g__smallVBelow,
	g__smallTah2dotsBelow, g__dot2l_tail, g__smallFourBelow);
cNuqtaLikeMiddle = (g__bar, g__barNarrow, g__barWaw, g__barRaised, g__barRaised_gaf, g__attachedRingMid);
cNuqtaLikeUpMid = (cNuqtaLikeUpper, cNuqtaLikeMiddle);
cNuqtaLike = (cNuqtaLikeUpper, cNuqtaLikeLower, cNuqtaLikeMiddle, g__noDot1u, g__noDot2u, g__noDot2l);


cNuqtaLikeFirst = (cNuqtaLikeLower,
	// kaf-tops can come first when you have an alternate height ngoeh or kaf/gaf-ring:
	cKafTop);
cNuqtaLikeSecond = (cNuqtaLikeUpMid,
	// these can come second when you have a gueh with an alternate height top:
	cDot2vl);

cNuqtaLikeLower_jump = cNuqtaLikeLower;
cNuqtaLikeLower_jump -= (g__hehHook_small, g__attachedRing, g__ring);

cNuqtaLikeUpperTall = (cDot3u, cDot4l, g__smallTah, g__smallTah2dots, g__dot1u_smallV,
	g__dot1u_smallV, g__dot1u_smallVKf, g__dot1u_smallTah, g__dot1u_smallTahKf, g__dot1u_ngMark);
cNuqtaLikeLowerTall = (cDot2vl, cDot3l, cDot4l, g__smallTahBelow, g__smallTah2dotsBelow);


// Diacritics
// Note: hamzas are nuqta-like, not diacritics

// Diacritic combinations

cPostShadda = (gZabar, gPesh, gDozabar, gDopesh, gKharizabar);
cShaddaPlus = (g__shadda_zabar, g__shadda_pesh, g__shadda_dozabar, g__shadda_dopesh, g__shadda_kharizabar);

cPostKharizabar = (gZabar, gPesh, gDozabar, gDopesh);
cKharizabarPlus = (g__kharizabar_zabar, g__kharizabar_pesh, g__kharizabar_dozabar, g__kharizabar_dopesh);


cDiacriticUpper = ( gZabar, gPesh, gShadda, gJazm, gJazm_openleft, gKharizabar, gDozabar, 
    gDopesh, gUltaPesh, gNoonGhunnaMark, gMaddaAbove,
	gVowelSmallV, gVowelInvSmallV, gZabarTwoDots, gShortVowelMark,
	gSmallHighSadMark, gSmallHighAinMark, gSmallHighRehDadMark, 
    gSmallHighRehHahMark, gSmallHighSeen, gSmallHighTah, gSmallDotlessHeadOfKhah,
	gNameMarker,
	cShaddaPlus, cKharizabarPlus, 
	gSmallUprightRectangularZero, gZwarakay);
cDiacriticLower = ( gZair, gKharizair, gDozair, gSmallLowMeem, gEmptyCentreLowStop ) ;

cDiacritic = (cDiacriticUpper cDiacriticLower);


cPostNuqta1 = (cDiacritic cHamzaAbove cHamzaBelow);  // hamzas can be nuqta-like or diacritics
cPostNuqta2 = (cDiacritic c_zerojoin);


// Mirroring

csNeedsMirror = (g_ornateLeftParen, g_ornateRightParen); // 2018, 2019, 201C, 201D, 201A,
csMirrored    = (g_ornateRightParen, g_ornateLeftParen);


/*
Classes for diacritic ordering:
	cMark1 class contains shadda, hamza, mark noon ghunna
	cMark2 class contains the vowels
	cMark3 class contains maddah
	cMark4 class contains quranic marks and Rohingya tones
*/

cMark1u = (gShadda, gNoonGhunnaMark, g__hamza, gHamzaAbove, g__wavyHamza
	// , gMaddaAbove_low
	);
cMark1l = (gHamzaBelow, gWavyHamzaBelow);
cMark1 = (cMark1u, cMark1l);
cMark2u = (gZabar, gPesh, gDozabar, gDopesh, gKharizabar,
	gJazm, gVowelInvSmallV, gVowelSmallV);
cMark2l = (gZair, gDozair, gKharizair);
cMark2 = (cMark2u, cMark2l);
cMark3 = (gMaddaAbove);
cMark4 = (gSmallHighRehDadMark, gSmallHighAinMark, gSmallHighSeen);

cMark1234u = (cMark1u, cMark2u, cMark3, cMark4);
cMark234u = (cMark2u cMark3 cMark4);
cMark234l = (cMark2l);
cMark34 = (cMark3 cMark4);
cMark2l_1234u = (cMark2l, cMark1234u);


cShowInvBoxes = (g_wordJoiner, g_paragraphSeparator, g_lineSeparator, g_zeroWidthNoBreakSpaceShowInv,
	g_narrowNoBreakSpace,
	g_leftToRightIsolate_alt, g_rightToLeftIsolate_alt, g_firstStrongIsolate_alt, g_popDirectionalIsolate_alt);

cEmbedMarkers = (g_leftToRightMark, g_rightToLeftMark, g_arabicLetterMark,
	g_leftToRightEmbedding, g_rightToLeftEmbedding, g_popDirectionalFormatting,
	g_leftToRightOverride, g_rightToLeftOverride,
	g_leftToRightIsolate, g_rightToLeftIsolate, g_firstStrongIsolate, g_popDirectionalIsolate);


//-------------------------------------------------------------------------------------------
//
// NFD > NFC
//

// TODO: add more characters here: waw, alef...
cs_nfd_noHamza = (gChotiyeh, gHehGoal);		// chotiyah, goal-hay
cs_nfc_hamza   = (gYehHamzaAbove, gHehGoalHamza);		// hamza-yay, hay-hamza


//-------------------------------------------------------------------------------------------
//
// Contextual shaping classes
//
// The "raw" forms indicate that initial/medial processing has not been done yet.

gBehIni_raw = pseudo(postscript("absBehIni"));
gJeemIni_raw = pseudo(postscript("absJeemIni"));
gSeenIni_raw = pseudo(postscript("absSeenIni"));
gSadIni_raw = pseudo(postscript("absSadIni"));
gTahIni_raw = pseudo(postscript("absTahIni"));
gAinIni_raw = pseudo(postscript("absAinIni"));
gFehIni_raw = pseudo(postscript("absFehIni"));
gQafIni_raw = pseudo(postscript("absFehIni"));
gKafIni_raw = pseudo(postscript("absKehehIni"));
gGafIni_raw = pseudo(postscript("absGafIni"));
gLamIni_raw = pseudo(postscript("absLamIni"));
gMeemIni_raw = pseudo(postscript("absMeemIni"));
gNoonIni_raw = pseudo(postscript("absBehIni"));
gHehGoalIni_raw = pseudo(postscript("absHehGoalIni"));
gHehDoIni_raw = pseudo(postscript("absHehDoachashmeeIni"));
gChotiyehIni_raw = pseudo(postscript("absBehIni"));

gBehMed_raw = pseudo(postscript("absBehMed"));
gJeemMed_raw = pseudo(postscript("absJeemMed"));
gSeenMed_raw = pseudo(postscript("absSeenMed"));
gSadMed_raw = pseudo(postscript("absSadMed"));
gTahMed_raw = pseudo(postscript("absTahMed"));
gAinMed_raw = pseudo(postscript("absAinMed"));
gFehMed_raw = pseudo(postscript("absFehMed"));
gQafMed_raw = pseudo(postscript("absFehMed"));
gKafMed_raw = pseudo(postscript("absKehehMed"));
gGafMed_raw = pseudo(postscript("absGafMed"));
gLamMed_raw = pseudo(postscript("absLamMed"));
gMeemMed_raw = pseudo(postscript("absMeemMed"));
gNoonMed_raw = pseudo(postscript("absBehMed"));
gHehGoalMed_raw = pseudo(postscript("absHehGoalMed"));
gTehMarbutaGoal_raw = pseudo(postscript("absHehGoalIni"));
gHehGoalHamza_raw = pseudo(postscript("absHehGoalIni"));	// heh-hamza
gHehDoMed_raw = pseudo(postscript("absHehDoachashmeeMed"));
gChotiyehMed_raw = pseudo(postscript("absBehMed"));

gMeemMed_alt_raw = pseudo(postscript("absMeemMed._alt"));
// Obsolete:
gBehMed_SS_raw = pseudo(postscript("absBehMed.beF_ss"));  // absBehMed.beF_ss / absBehMed._ss


// Right-link

// Special cases

///gBariyehHamzaFin0 = pseudo(postscript("nlqBariyehFin")) {nuqtaG = w_hamza};
///gBariyeh0 = pseudo(postscript("absBehIni")) {nuqtaG = n2L};
//gBariyehFin0 = pseudo(postscript("nlqBariyehFin"))		{nuqtaG = nNone};  -- defined above with dual-connectors


cBehIso = (gBeh, gTeh, gTheh, gPeh, gTteh, gTteheh, gTehRing, gTehThreeDotsAboveDownwards, gBeeh, gDotlessBeh);
cBehFin = (gBehFin, gBehFin_bfkl) ;
cJeemIso = (gJeem, gHah, gKhah, gTcheh, gNyeh, gDyeh, gTcheheh, gHahHamzaAbove, gHahSmallTahAbove,
	gHahSmallTahBelow, gHahSmallTahTwoDots, gHahThreeDotsAbove);
cJeemFin = (gJeemFin);
cSeenIso = (gSeen, gSheen, gSeenDotBelowDotAbove, gSeenFourDotsAbove, gSeenSmallTahTwoDots, gSeenTwoVertAbove,
	gSeenThreeDotsBelowThreeDotsAbove, gSeenInvertedVAbove, gSeenFourAbove);
cSeenFin = (gSeenFin, gSeenFin_short);
cSadIso = (gSad, gDad, gDadDotBelow, gSadThreeDotsAbove);
cSadFin = (gSadFin);
cTahIso = (gTah, gZah);
cTahFin = (gTahFin);
cAinIso = (gAin, gGhain);
cAinFin = (gAinFin);
cFehIso = (gFeh, gFehThreeDotsBelow, gDotlessFeh);
cFehFin = (gFehFin);
cQafIso = (gQaf, gDotlessQaf);
cQafFin = (gQafFin, gQafFin_stfh, gQafFin_short, gQafFin_stfh_short);
cLamIso = (gLam, gLamBar, gLamSmallV, gLamSmallV_alt, gLamThreeDots, gLamSmallTah);
cLamFin = (gLamFin, gLamFin_short, gLamFin_kfTall);
cMeemIso = (gMeem, gMeemLowdiac);
cMeemFin = (gMeemFin, gMeemFin_short, gMeemFinLowdiac);
cNoonIso = (gNoon, gNoonGhunna, gRnoon, gNoonRetro, gNoonDotBelow, gNoonRing, gNoonSmallV);
cNoonFin = (gNoonFin, gNoonGhunnaFin, gNoonFin_short);
cKafIso = (gKaf, gGaf, gGueh, gNgoeh, gKafRing, gGafRing, gArabicKaf, gKafThreeDotsAbove, gArabicKafTwoDotsAbove);
cKafFin = (gKafFin, gGafFin, gKafFin_squiggle);
cHehGoalIso = (gHehGoal, gTehMarbuta, gTehMarbutaGoal, gHehGoalHamza, gHehYehAbove, gAe, gHeh);
cHehGoalFin = (gHehGoalFin, gTehMarbutaGoalFin);   // gHehGoalFin_stfh - no longer used
cHehDoIso = (gHehDo);
cHehDoFin = (gHehDoFin);

// Right-link

cAlefIso = (gAlef, gAlefHamzaAbove, gAlefHamzaBelow, gAlefWavyHamzaAbove, gAlefWavyHamzaBelow,
				gAlefMaddaAbove, gHighHamzaAlef, gHighHamzaAlefArabic, gAlefTwoAbove, gAlefThreeAbove,
                gAlefWasla);
cAlefFin = (gAlefFin, gAlefFin_lm);

cDalIso = (gDal, gThal, gDdal, gDalDotBelowSmallTah, gDalTwoVertBelowSmallTah, gDalDotBelow,
	gDalRing, gDalFourDotsAbove, gDul);
cDalFin = (gDalFin);

cRehIso = (gReh, gZain, gRreh, gJeh, gRehDotBelow, gRehDotBelowDotAbove,
	gRehTwoDotsAbove, gRehRing, gRehFourDotsAbove, gRehTwoVertAbove, gRehHamzaAbove, gRehSmallTahTwoDots);
cZainIso = (gZain, gRreh, gJeh, gRehDotBelowDotAbove,
	gRehTwoDotsAbove, gRehFourDotsAbove, gRehTwoVertAbove, gRehHamzaAbove, gRehSmallTahTwoDots);
cRehFin = (gRehFin, gRehFin_jkl, gRehFin_hgM) ; // gRehFin_sshg -- obsolete

cWawIso = (gWaw, gWawHamzaAbove, gWawRing, gArabicU, gOe, gKirghizOe, gKirghizYu, 
	gYu, gWawDotAbove, gWawTwoDotsAbove, gVe, gWawTwoAbove, gWawThreeAbove);
cWawFin = (gWawFin, gWawFin_stfh);

cBariyehIso = (gBariyeh, gBariyehHamza, gBariyehTwoAbove, gBariyehThreeAbove);		// bariyeh -> behIni + 2Nlower
cBariyehFin = (gBariyehFin);

csChotiyehFin = (gChotiyehFin, gChotiyehFin_bfkl, gChotiyehFin_short, gChotiyehFin_bfkl_short);
csYehTailFin = (gYehTailFin, gYehTailFin_bfkl, gYehTailFin, gYehTailFin_bfkl);
csKashmiriYehFin = (gKashmiriYehFin, gKashmiriYehFin_bfkl, gKashmiriYehFin, gKashmiriYehFin_bfkl);

cChotiyehIso = (gChotiyeh, gYeh, gYehHamzaAbove, gArabicE, gYehTail, gKashmiriYeh, gYehSmallV, gAlefMaksura,
	gYehTwoAbove, gYehThreeAbove, gYehFourBelow);
cChotiyehFin = csChotiyehFin;
cTehMarbutaFin = (gTehMarbutaFin);


// These classes must match each other.

// This class should only include forms generated by the separate-nuqta rules above:
csDualLinkIso = (c_zerojoin,	gBeh,		gJeem,		gSeen,		gSad,		gTah,
	gAin,		gFeh,		gQaf,		gKaf,		gGaf,		gLam,		gMeem,
	gNoon,		gHehGoal,	gHehDo,		gChotiyeh);

csDualLinkIni_raw = (c_zerojoin,		gBehIni_raw,	gJeemIni_raw,	gSeenIni_raw,	gSadIni_raw,	gTahIni_raw,
	gAinIni_raw,	gFehIni_raw,	gFehIni_raw,	gKafIni_raw,	gGafIni_raw,	gLamIni_raw,	gMeemIni_raw,
	gBehIni_raw,	gHehGoalIni_raw,gHehDoIni_raw,	gBehIni_raw);

csDualLinkMed_raw = (c_zerojoin,		gBehMed_raw,	gJeemMed_raw,	gSeenMed_raw,	gSadMed_raw,	gTahMed_raw,
	gAinMed_raw,	gFehMed_raw,	gFehMed_raw,	gKafMed_raw,	gGafMed_raw,	gLamMed_raw,	gMeemMed_raw,
	gBehMed_raw,	gHehGoalMed_raw,gHehDoMed_raw,	gBehMed_raw);

csDualLinkFin = (	c_zerojoin,		gBehFin,		gJeemFin,		gSeenFin,		gSadFin,		gTahFin,
	gAinFin,		gFehFin,		gQafFin,		gKafFin,		gGafFin,		gLamFin,		gMeemFin,
	gNoonFin,		gHehGoalFin,	gHehDoFin,		gChotiyehFin);


// This class should only include forms generated by the separate-nuqta rules above:
csRightLinkIso = (	c_zerojoin,	gAlef,		gDal,		gReh,		gWaw,		gBariyeh,
	gTehMarbuta,	gTehMarbutaGoal,		gAe	);

csRightLinkFin = (	c_zerojoin,	gAlefFin,	gDalFin,	gRehFin,	gWawFin,	gBariyehFin,
	gTehMarbutaFin,	gTehMarbutaGoalFin,		gTehMarbutaFin);



// General (non-subsitution) classes of initials and medials

cBehIni = ( gBehIni, gBehIniAi, gBehIniBe, gBehIniBeM1, gBehIniBeM2, gBehIniBeNn, gBehIniBeRe,
	gBehIniBy, gBehIniCh, gBehIniFe, gBehIniHd, gBehIniHgF, gBehIniHgM, gBehIniJm,
	gBehIniMm, gBehIniMmX, gBehIniNn, gBehIniQf, gBehIniRe, gBehIniSd, gBehIniSn,
	gBehIniTa, gBehIniHdR ) ;  // gBehIniMmM, gBehIniMmMR, -- obsolete
cJeemIni = ( gJeemIni gJeemIniBeM1 gJeemIniBeF gJeemIniBeM2 gJeemIniJm gJeemIniRe
    gJeemIniSn gJeemIniSd gJeemIniTa gJeemIniAi gJeemIniFe gJeemIniQf
    gJeemIniMm gJeemIniNn gJeemIniHgF gJeemIniHgM gJeemIniHd gJeemIniCh gJeemIniBy
    gJeemIniBe gJeemIniBeRe gJeemIniBeNn gJeemIniBeHg gJeemIniMmX ) ;
cSeenIni = ( gSeenIni gSeenIniBeM1 gSeenIniBeF gSeenIniBeM2 gSeenIniJm gSeenIniRe
	gSeenIniSn gSeenIniSd gSeenIniTa gSeenIniAi gSeenIniFe gSeenIniQf
	gSeenIniMm gSeenIniNn gSeenIniHgF gSeenIniHgM gSeenIniHd gSeenIniCh gSeenIniBy
	gSeenIniBe gSeenIniBeRe gSeenIniBeNn gSeenIniBeHg gSeenIniMmX
	 gSeenIniJm_flat ) ;
cSadIni = ( gSadIni gSadIniBeM1 gSadIniBeF gSadIniBeM2 gSadIniJm gSadIniRe
	gSadIniSn gSadIniSd gSadIniTa gSadIniAi gSadIniFe gSadIniQf
	gSadIniMm gSadIniNn gSadIniHgF gSadIniHgM gSadIniHd gSadIniCh gSadIniBy
	gSadIniBe gSadIniBeRe gSadIniBeNn gSadIniBeHg gSadIniMmX ) ;
cTahIni = ( gTahIni gTahIniBeM1 gTahIniBeF gTahIniBeM2 gTahIniJm gTahIniRe
	gTahIniSn gTahIniSd gTahIniTa gTahIniAi gTahIniFe gTahIniQf
	gTahIniMm gTahIniNn gTahIniHgF gTahIniHgM gTahIniHd gTahIniCh gTahIniBy
	gTahIniBe gTahIniBeRe gTahIniBeNn gTahIniBeHg gTahIniMmX,
	gTahIniKf gTahIniBeKf ) ;
cAinIni = ( gAinIni gAinIniBeM1 gAinIniBeF gAinIniBeM2 gAinIniJm gAinIniRe
	gAinIniSn gAinIniSd gAinIniTa gAinIniAi gAinIniFe gAinIniQf
	gAinIniMm gAinIniNn gAinIniHgF gAinIniHgM gAinIniHd gAinIniCh gAinIniBy
	gAinIniBe gAinIniBeRe gAinIniBeNn gAinIniBeHg gAinIniMmX ) ;
cFehIni = ( gFehIni gFehIniBeM1 gFehIniBeF gFehIniBeM2 gFehIniJm gFehIniRe
	gFehIniSn gFehIniSd gFehIniTa gFehIniAi gFehIniFe gFehIniQf
	gFehIniMm gFehIniNn gFehIniHgF gFehIniHgM gFehIniHd gFehIniCh gFehIniBy
	gFehIniBe gFehIniBeRe gFehIniBeNn gFehIniBeHg gFehIniMmX ) ;
cLamIni = ( gLamIni gLamIniBeM1 gLamIniBeM2 gLamIniJm gLamIniRe
	gLamIniSn gLamIniSd gLamIniTa gLamIniAi gLamIniFe gLamIniQf
	gLamIniMm gLamIniNn gLamIniHgF gLamIniHgM gLamIniHd gLamIniCh gLamIniBy
	gLamIniBe gLamIniBeRe gLamIniBeNn gLamIniBeHg gLamIniAl
	gLamIni_short ) ;
cMeemIni = ( gMeemIni, gMeemIniAi, gMeemIniBe, gMeemIniBeF, gMeemIniBeHg, gMeemIniBeM1, gMeemIniBeM2,
	gMeemIniBeNn, gMeemIniBeRe, gMeemIniBeHg,
	gMeemIniBy, gMeemIniCh, gMeemIniFe, gMeemIniHd, gMeemIniHgF, gMeemIniHgM, gMeemIniJm, gMeemIniMm,
	gMeemIniMmX, gMeemIniNn, gMeemIniQf, gMeemIniRe, gMeemIniSd, gMeemIniSn, gMeemIniTa);
cHehDoIni = ( gHehDoIni gHehDoIniBeM1 gHehDoIniBeF gHehDoIniBeM2 gHehDoIniJm
	gHehDoIniRe gHehDoIniSn gHehDoIniSd gHehDoIniTa gHehDoIniAi
	gHehDoIniFe gHehDoIniQf gHehDoIniMm gHehDoIniNn gHehDoIniHgF gHehDoIniHgM
	gHehDoIniHd gHehDoIniCh gHehDoIniBy gHehDoIniBe gHehDoIniBeRe gHehDoIniBeNn
	gHehDoIniBeHg gHehDoIniMmX ) ;
cHehGoalIni = ( gHehGoalIni gHehGoalIniBeM1 gHehGoalIniBeF gHehGoalIniBeM2 gHehGoalIniJm
	gHehGoalIniRe gHehGoalIniSn gHehGoalIniSd gHehGoalIniTa gHehGoalIniAi
	gHehGoalIniFe gHehGoalIniQf gHehGoalIniMm gHehGoalIniNn gHehGoalIniHgF gHehGoalIniHgM
	gHehGoalIniHd gHehGoalIniCh gHehGoalIniBy gHehGoalIniBe gHehGoalIniBeRe gHehGoalIniBeNn
	gHehGoalIniBeHg gHehGoalIniMmX ) ;
cKafIni_gaf = (gGafIni gGafIniBe /*gGafIniBeF*/ gGafIniBeM1 gGafIniBeM2 gGafIniJm gGafIniRe gGafIniSn
	gGafIniSd gGafIniTa gGafIniAi gGafIniFe gGafIniQf gGafIniMm gGafIniMmX gGafIniNn
	gGafIniHgM gGafIniHgF gGafIniHd gGafIniCh gGafIniBy gGafIniDk gGafIniBeRe gGafIniBeNn gGafIniBeHg gGafIniKf
	gGafIniMm_short);
cKafIni = ( gKafIni gKafIniBe /*gKafIniBeF*/ gKafIniBeM1 gKafIniBeM2 gKafIniJm gKafIniRe gKafIniSn
	gKafIniSd gKafIniTa gKafIniAi gKafIniFe gKafIniQf gKafIniMm gKafIniMmX gKafIniNn
	gKafIniHgM gKafIniHgF gKafIniHd gKafIniCh gKafIniBy gKafIniDk gKafIniBeRe gKafIniBeNn gKafIniBeHg gKafIniKf
	gKafIniMm_short
	cKafIni_gaf) ;


cBehMed = ( gBehMed gBehMedBeM1 gBehMedBeF gBehMedBeM2 gBehMedJm gBehMedRe
	gBehMedSn gBehMedSd gBehMedTa gBehMedAi gBehMedFe gBehMedQf
	gBehMedMm gBehMedNn gBehMedHgF gBehMedHgM gBehMedHd gBehMedCh gBehMedBy
	gBehMedBe gBehMedBeRe gBehMedBeNn gBehMedBeHg gBehMedMmX gBehMedBeF_ss
	gBehMedSd_ss gBehMedTa_ss gBehMedAi_ss gBehMedFe_ss gBehMedQf_ss gBehMedHgF_be
	gBehMedNn_hgbm
	gBehMedHdR gBehMedJmR gBehMedMmR gBehMedMmXR gBehMedNnR gBehMedNn_hgbmR gBehMedSnR
	gBehMedKf_wide ) ;
cJeemMed = ( gJeemMed gJeemMedBeM1 gJeemMedBeF gJeemMedBeM2 gJeemMedJm gJeemMedRe
	gJeemMedSn gJeemMedSd gJeemMedTa gJeemMedAi gJeemMedFe gJeemMedQf
	gJeemMedMm gJeemMedNn gJeemMedHgF gJeemMedHgM gJeemMedHd gJeemMedCh gJeemMedBy
	gJeemMedBe gJeemMedBeRe gJeemMedBeNn gJeemMedBeHg gJeemMedMmX
	gJeemMedBeKl
	gJeemMedBy_short ) ;
cSeenMed = ( gSeenMed gSeenMedBeM1 gSeenMedBeF gSeenMedBeM2 gSeenMedJm gSeenMedRe
	gSeenMedSn gSeenMedSd gSeenMedTa gSeenMedAi gSeenMedFe gSeenMedQf
	gSeenMedMm gSeenMedNn gSeenMedHgF gSeenMedHgM gSeenMedHd gSeenMedCh gSeenMedBy
	gSeenMedBe gSeenMedBeRe gSeenMedBeNn gSeenMedBeHg gSeenMedMmX
	gSeenMedSn_sn gSeenMedJm_flat ) ;
cSadMed = ( gSadMed gSadMedBeM1 gSadMedBeF gSadMedBeM2 gSadMedJm gSadMedRe
	gSadMedSn gSadMedSd gSadMedTa gSadMedAi gSadMedFe gSadMedQf
	gSadMedMm gSadMedNn gSadMedHgF gSadMedHgM gSadMedHd gSadMedCh gSadMedBy
	gSadMedBe gSadMedBeRe gSadMedBeNn gSadMedBeHg gSadMedMmX ) ;
cAinMed = ( gAinMed gAinMedBeM1 gAinMedBeF gAinMedBeM2 gAinMedJm gAinMedRe
	gAinMedSn gAinMedSd gAinMedTa gAinMedAi gAinMedFe gAinMedQf
	gAinMedMm gAinMedNn gAinMedHgF gAinMedHgM gAinMedHd gAinMedCh gAinMedBy
	gAinMedBe gAinMedBeRe gAinMedBeNn gAinMedBeHg gAinMedMmX ) ;
cTahMed = ( gTahMed gTahMedBeM1 gTahMedBeF gTahMedBeM2 gTahMedJm gTahMedRe
	gTahMedSn gTahMedSd gTahMedTa gTahMedAi gTahMedFe gTahMedQf
	gTahMedMm gTahMedNn gTahMedHgF gTahMedHgM gTahMedHd gTahMedCh gTahMedBy
	gTahMedBe gTahMedBeRe gTahMedBeNn gTahMedBeHg gTahMedMmX
	gTahMedKf gTahMedBeKf ) ;
cFehMed = ( gFehMed gFehMedBeM1 gFehMedBeF gFehMedBeM2 gFehMedJm gFehMedRe
	gFehMedSn gFehMedSd gFehMedTa gFehMedAi gFehMedFe gFehMedQf
	gFehMedMm gFehMedNn gFehMedHgF gFehMedHgM gFehMedHd gFehMedCh gFehMedBy
	gFehMedBe gFehMedBeRe gFehMedBeNn gFehMedBeHg gFehMedMmX ) ;
cLamMed = ( gLamMed gLamMedBeM1 gLamMedBeF gLamMedBeM2 gLamMedJm gLamMedRe
	gLamMedSn gLamMedSd gLamMedTa gLamMedAi gLamMedFe gLamMedQf
	gLamMedMm gLamMedNn gLamMedHgF gLamMedHgM gLamMedHd gLamMedCh gLamMedBy
	gLamMedBe gLamMedBeRe gLamMedBeNn gLamMedBeHg
	gLamMedAl gLamMedCh_gfTall gLamMedBe_kfTall gLamMedBy_kfTall,	// no MmX
	gLamMed_short );
cMeemMed = ( gMeemMed gMeemMedBeM1 gMeemMedBeF gMeemMedBeM2 gMeemMedJm gMeemMedRe
	gMeemMedSn gMeemMedSd gMeemMedTa gMeemMedAi gMeemMedFe gMeemMedQf
	gMeemMedMm gMeemMedNn gMeemMedHgF gMeemMedHgM gMeemMedHd gMeemMedCh gMeemMedBy
	gMeemMedBe gMeemMedBeRe gMeemMedBeNn gMeemMedBeHg gMeemMedMmX ) ;
cMeemMed_alt = (gMeemMed_alt gMeemMedBeNn_alt);
cHehGoalMed = ( gHehGoalMed gHehGoalMedBeM1 gHehGoalMedBeF gHehGoalMedBeM2
	gHehGoalMedJm gHehGoalMedRe gHehGoalMedSn gHehGoalMedSd gHehGoalMedTa
	gHehGoalMedAi gHehGoalMedFe gHehGoalMedQf gHehGoalMedMm gHehGoalMedNn gHehGoalMedHgF
	gHehGoalMedHgM gHehGoalMedHd gHehGoalMedCh gHehGoalMedBy gHehGoalMedBe
	gHehGoalMedBeRe gHehGoalMedBeNn gHehGoalMedBeHg gHehGoalMedMmX ) ;
cKafMed_gaf = (gGafMed gGafMedBe gGafMedBeF gGafMedBeM1 gGafMedBeM2 gGafMedJm gGafMedRe gGafMedSn
	gGafMedSd gGafMedTa gGafMedAi gGafMedFe gGafMedQf gGafMedMm gGafMedMmX gGafMedNn gGafMedHgM
	gGafMedHgF gGafMedHd gGafMedCh gGafMedBy gGafMedDk gGafMedBeRe gGafMedBeNn gGafMedBeHg
	gGafMedJm_lowentry gGafMedJm_short gGafMedJm_tall gGafMedKf_lm );
cKafMed = ( gKafMed gKafMedBe gKafMedBeF gKafMedBeM1 gKafMedBeM2 gKafMedJm gKafMedRe gKafMedSn
	gKafMedSd gKafMedTa gKafMedAi gKafMedFe gKafMedQf gKafMedMm gKafMedMmX gKafMedNn gKafMedHgM
	gKafMedHgF gKafMedHd gKafMedCh gKafMedBy gKafMedDk gKafMedBeRe gKafMedBeNn gKafMedBeHg
	gKafMedJm_lowentry gKafMedJm_short gKafMedJm_tall
	cKafMed_gaf ) ;
cHehDoMed = ( gHehDoMed gHehDoMedBeM1 gHehDoMedBeF
	gHehDoMedBeM2 gHehDoMedJm gHehDoMedRe gHehDoMedSn
	gHehDoMedSd gHehDoMedTa gHehDoMedAi
	gHehDoMedFe gHehDoMedQf gHehDoMedMm gHehDoMedNn
	gHehDoMedHgF gHehDoMedHgM gHehDoMedHd gHehDoMedCh
	gHehDoMedBy gHehDoMedBe gHehDoMedBeRe gHehDoMedBeNn
	gHehDoMedBeHg gHehDoMedMmX ) ;


// Nastaliq-specific shaping

// OBSOLETE
//c_Med_ss = ( gBehMedBeF_ss gBehMedSd_ss gBehMedTa_ss gBehMedAi_ss gBehMedFe_ss gBehMedQf_ss gBehMedHgF_be ) ;


// Does not initiate alternate (kinked) kaf:
c_dkg_noKalt = ( gDalFin
	gKafFin gGafFin gKafFin_squiggle
	gKafMedBeF gKafMedBeM2 gKafMedJm gKafMedRe gKafMedSn gKafMedSd gKafMedTa
	gKafMedAi gKafMedFe gKafMedQf gKafMedMm gKafMedNn gKafMedHgF gKafMedHd gKafMedCh
	gKafMedBy gKafMedDk
    gGafMedBeF gGafMedBeM2 gGafMedJm gGafMedRe gGafMedSn gGafMedSd gGafMedTa
    gGafMedAi gGafMedFe gGafMedQf gGafMedMm gGafMedNn gGafMedHgF gGafMedHd gGafMedCh
    gGafMedBy gGafMedDk ) ;

// initiates rounded kaf:
c_al_postKround = (cAlefFin cLamFin cLamMed);

// Requires alternate meem and kaf
c_dkgal_postAlt = ( c_dkg_noKalt, c_al_postKround );

// Use when we are not generating kinked kafs:
///c_dkgal = (c_dkgal_postAlt,
///	gKafMedBe, gKafMedBeRe, gKafMedBeNn, gKafMedBeHg,
///	gGafMedBe, gGafMedBeRe, gGafMedBeNn, gGafMedBeHg);

c_dkgal = (cDalFin, cKafFin, cKafMed, c_al_postKround);


// Alternate qaf and waw forms
c_qw = (gQafFin gQafFin_stfh gWawFin gWawFin_stfh);


// Alternate initial heh-doachashmees

csHehDoIni_noAlt = (gHehDoIni gHehDoIniAi gHehDoIniBe gHehDoIniBeF gHehDoIniBeM1 gHehDoIniBeM2
	gHehDoIniBeHg gHehDoIniBeNn gHehDoIniBeRe gHehDoIniFe gHehDoIniJm  gHehDoIniRe gHehDoIniSd
	gHehDoIniSn gHehDoIniTa gHehDoIniMm gHehDoIniMmX gHehDoIniNn gHehDoIniQf
	gHehDoIniHd gHehDoIniHgM gHehDoIniHgF gHehDoIniCh gHehDoIniBy);

csHehDoIni_alt = (gHehDoIni_alt gHehDoIniAi_alt gHehDoIniBe_alt gHehDoIniBeF_alt gHehDoIniBeM1_alt gHehDoIniBeM2_alt
	gHehDoIniBeHg_alt gHehDoIniBeNn_alt gHehDoIniBeRe_alt gHehDoIniFe_alt gHehDoIniJm_alt gHehDoIniRe_alt gHehDoIniSd_alt
	gHehDoIniSn_alt gHehDoIniTa_alt gHehDoIniMm_alt gHehDoIniMmX_alt gHehDoIniNn_alt gHehDoIniQf_alt
	gHehDoIniHd_alt gHehDoIniHgM_alt gHehDoIniHgF_alt gHehDoIniCh_alt gHehDoIniBy_alt);


cBehIM = (cBehIni cBehMed);
cBehMedNn = (gBehMedNn gBehMedNn_hgbm);
cJeemIM = (cJeemIni cJeemMed);
cJeemMF = (cJeemMed cJeemFin);
cAinIM = (cAinIni cAinMed);
cFehIM = (cFehIni cFehMed);
cLamIM = (cLamIni cLamMed);
cLamMF = (cLamMed cLamFin);
cKafIM = (cKafIni cKafMed);
cKafMF = (cKafMed cKafFin);
//cKafNoIso = (cKafIM cKafFin csKafIM_base); -- see below
cTahIM = (cTahIni cTahMed);
cMeemMF = (cMeemMed cMeemFin);
cSeenMF = (cSeenMed cSeenFin);
cSadMF = (cSadMed cSadFin);


csDotlessQaf_feh = (gFeh, gQafFin, gQafFin_stfh, cFehIM);
csDotlessQaf_qaf = (gDotlessQaf, gQafFin, gQafFin_stfh, cFehIM);

//-------------------------------------------------------------------------------------------
//
// Kaf/gaf height adjustments
//

csGafIni_medium = (
	gGafIniBe, gGafIniBeM1, gGafIniBeM2, gGafIniBeRe, gGafIniBeNn, gGafIniBeHg,
	// gGafIniBef - does not exist
	gGafIniJm, gGafIniRe, gGafIniSn, gGafIniSd, gGafIniTa,
	gGafIniAi, gGafIniFe, gGafIniQf, gGafIniMm, gGafIniMmX, gGafIniNn, gGafIniDk,
	gGafIniKf, gGafIniHgM, gGafIniHgF, gGafIniHd, gGafIniCh, gGafIniBy
);

csKafIni_medium = (
	gKafIniBe, gKafIniBeM1, gKafIniBeM2, gKafIniBeRe, gKafIniBeNn, gKafIniBeHg,
	// gKafIniBeF - does not exist
	gKafIniJm, gKafIniRe, gKafIniSn, gKafIniSd, gKafIniTa,
	gKafIniAi, gKafIniFe, gKafIniQf, gKafIniMm, gKafIniMmX, gKafIniNn, gKafIniDk,
	gKafIniKf, gKafIniHgM, gKafIniHgF, gKafIniHd, gKafIniCh, gKafIniBy,
	csGafIni_medium
);

csGafMed_medium = (
	gGafMedBe, gGafMedBeM1, gGafMedBeM2, gGafMedBeRe, gGafMedBeNn, gGafMedBeHg, gGafMedBeF,
	gGafMedJm, gGafMedRe, gGafMedSn, gGafMedSd, gGafMedTa,
	gGafMedAi, gGafMedFe, gGafMedQf, gGafMedMm, gGafMedMmX, gGafMedNn, gGafMedDk,
	// gGafMedKf - does not exist
	gGafMedHgM, gGafMedHgF, gGafMedHd, gGafMedCh, gGafMedBy
);

csKafMed_medium_noGaf = (
	gKafMedBe, gKafMedBeM1, gKafMedBeM2, gKafMedBeRe, gKafMedBeNn, gKafMedBeHg, gKafMedBeF,
	gKafMedJm, gKafMedRe, gKafMedSn, gKafMedSd, gKafMedTa,
	gKafMedAi, gKafMedFe, gKafMedQf, gKafMedMm, gKafMedMmX, gKafMedNn, gKafMedDk,
	// gKafMedKf - does not exist
	gKafMedHgM, gKafMedHgF, gKafMedHd, gKafMedCh, gKafMedBy
);

csKafMed_medium = (csKafMed_medium_noGaf  csGafMed_medium);

csGafIM_medium = (csGafIni_medium, csGafMed_medium);
csKafIM_medium = (csKafIni_medium, csKafMed_medium);

csGafIni_base = (
	gKafIniBe_base, gKafIniBeM1_base, gKafIniBeM2_base, gKafIniBeRe_base, gKafIniBeNn_base, gKafIniBeHg_base,
	// gGafIniBeF - does not exist
	gKafIniJm_base, gKafIniRe_base, gKafIniSn_base, gKafIniSd_base, gKafIniTa_base,
	gKafIniAi_base, gKafIniFe_base, gKafIniQf_base, gGafIniMm_short, gKafIniMmX_base, gKafIniNn_base, gKafIniDk_base,
	gKafIniKf_base,	gKafIniHgM_base, gKafIniHgF_base, gKafIniHd_base, gKafIniCh_base, gGafIniBy /*no change*/
);

csKafIni_base = (
	gKafIniBe_base, gKafIniBeM1_base, gKafIniBeM2_base, gKafIniBeRe_base, gKafIniBeNn_base, gKafIniBeHg_base,
	// gKafIniBeF - does not exist
	gKafIniJm_base, gKafIniRe_base, gKafIniSn_base, gKafIniSd_base, gKafIniTa_base,
	gKafIniAi_base, gKafIniFe_base, gKafIniQf_base, gKafIniMm_short, gKafIniMmX_base, gKafIniNn_base, gKafIniDk_base,
	gKafIniKf_base,	gKafIniHgM_base, gKafIniHgF_base, gKafIniHd_base, gKafIniCh_base, gKafIniBy, /*no change*/
	csGafIni_base
);

csGafMed_base = (
	gKafMedBe_base, gKafMedBeM1_base, gKafMedBeM2_base, gKafMedBeRe_base, gKafMedBeNn_base, gKafMedBeHg_base, gKafMedBeF_base,
	gKafMedJm_base, gKafMedRe_base, gKafMedSn_base, gKafMedSd_base, gKafMedTa_base,
	gKafMedAi_base, gKafMedFe_base, gKafMedQf_base, gKafMedMm_base, gKafMedMmX_base, gKafMedNn_base, gKafMedDk_base,
	// gGafMedKf - does not exist
	gKafMedHgM_base, gKafMedHgF_base, gKafMedHd_base, gKafMedCh_base, gGafMedBy /*no change*/
);
csKafMed_base_noGaf = (
	gKafMedBe_base, gKafMedBeM1_base, gKafMedBeM2_base, gKafMedBeRe_base, gKafMedBeNn_base, gKafMedBeHg_base, gKafMedBeF_base,
	gKafMedJm_base, gKafMedRe_base, gKafMedSn_base, gKafMedSd_base, gKafMedTa_base,
	gKafMedAi_base, gKafMedFe_base, gKafMedQf_base, gKafMedMm_base, gKafMedMmX_base, gKafMedNn_base, gKafMedDk_base,
	// gKafMedKf - does not exist
	gKafMedHgM_base, gKafMedHgF_base, gKafMedHd_base, gKafMedCh_base, gKafMedBy /*no change*/
);
csKafMed_base = (
	csKafMed_base_noGaf,
	csGafMed_base
);

csGafIM_base = (csGafIni_base, csGafMed_base);
csKafIM_base = (csKafIni_base, csKafMed_base);

// Note that for a few initials, we use the shorter versions instead of the short, and there are special
// forms for By and Jm forms.
csGafIni_top_short = (
	g__gafIniTop_short, g__gafIniTop_short, g__gafIniTop_short, g__gafIniTop_short, 
	// g__gafIniTop_short, -- no beF
	g__gafIniTop_short, g__gafIniTop_short, g__gafTop_bj_short,/*jm*/ g__gafIniTop_short, g__gafIniTop_short,
	g__gafIniTop_short, g__gafIniTop_shorter,/*ta*/ g__gafIniTop_short, g__gafIniTop_short, g__gafIniTop_short,
	g__kafTop_m_bogus,/*mm*/ g__gafIniTop_short, g__gafIniTop_short, g__gafIniTop_short, g__gafIniTop_short,
	g__gafIniTop_short, g__gafIniTop_short, g__gafIniTop_short, g__gafIniTop_short, g__gafTop_bj_short/*by*/
);

csKafIni_top_short = (
	g__kafIniTop_short, g__kafIniTop_short, g__kafIniTop_short, g__kafIniTop_short, 
	// g__kafIniTop_short, -- no beF
	g__kafIniTop_short, g__kafIniTop_short, g__kafTop_bj_short,/*jm*/ g__kafIniTop_short, g__kafIniTop_short,
	g__kafIniTop_short, g__kafIniTop_shorter,/*ta*/ g__kafIniTop_short, g__kafIniTop_short, g__kafIniTop_short,
	g__kafTop_m_bogus,/*mm*/ g__kafIniTop_short, g__kafIniTop_short, g__kafIniTop_short, g__kafIniTop_short,
	g__kafIniTop_short, g__kafIniTop_short, g__kafIniTop_short, g__kafIniTop_short, g__kafTop_bj_short,/*by*/
	csGafIni_top_short
);

// Note that for a few initials, we use the shorter versions instead of the short, and there are special
// forms for By and Jm forms.
csGafMed_top_short = (
	g__gafMedTop_short, g__gafMedTop_short, g__gafMedTop_short, g__gafMedTop_short, g__gafMedTop_short,
	g__gafMedTop_short, g__gafMedTop_short, g__gafMedTop_short,/*jm*/ g__gafMedTop_short, g__gafMedTop_short,
	g__gafMedTop_short, g__gafMedTop_short, g__gafMedTop_short, g__gafMedTop_short, g__gafMedTop_short,
	g__gafMedTop_short, g__gafMedTop_short, g__gafMedTop_short, g__gafMedTop_short, 
	// g__gafMedTop_short, -- Dk
	g__gafMedTop_short, g__gafMedTop_short, g__gafMedTop_short, g__gafMedTop_short, g__gafMedTop_short
);

csKafMed_top_short = (
	g__kafMedTop_short, g__kafMedTop_short, g__kafMedTop_short, g__kafMedTop_short, g__kafMedTop_short,
	g__kafMedTop_short, g__kafMedTop_short,	g__kafMedTop_short,/*jm*/ g__kafMedTop_short, g__kafMedTop_short,
	g__kafMedTop_short, g__kafMedTop_short, g__kafMedTop_short, g__kafMedTop_short, g__kafMedTop_short,
	g__kafMedTop_short, g__kafMedTop_short, g__kafMedTop_short, g__kafMedTop_short, 
	// g__kafMedTop_short, -- Dk
	g__kafMedTop_short, g__kafMedTop_short, g__kafMedTop_short, g__kafMedTop_short, g__kafMedTop_short,
	csGafMed_top_short
);

csGafIM_top_short = (csGafIni_top_short, csGafMed_top_short);
csKafIM_top_short = (csKafIni_top_short, csKafMed_top_short);

// Note that for a few initials, we use the short versions instead of the shorter, and there are special
// forms for By and Jm forms.
csGafIni_top_shorter = (
	g__gafIniTop_shorter, g__gafIniTop_shorter, g__gafIniTop_shorter, g__gafIniTop_shorter, 
	// g__gafIniTop_shorter, -- no beF
	g__gafIniTop_shorter, g__gafIniTop_shorter, g__gafTop_bj_short,/*jm*/ g__gafIniTop_shorter, g__gafIniTop_shorter,
	g__gafIniTop_shorter, g__gafIniTop_shorter, g__gafIniTop_shorter, g__gafIniTop_shorter, g__gafIniTop_shorter,
	g__kafTop_m_bogus,/*mm*/ g__gafIniTop_shorter, g__gafIniTop_shorter, g__gafIniTop_shorter, g__gafIniTop_shorter,
	g__gafIniTop_shorter, g__gafIniTop_shorter, g__gafIniTop_shorter, g__gafIniTop_shorter, g__gafTop_bj_short/*by*/
);

csKafIni_top_shorter = (
	g__kafIniTop_shorter, g__kafIniTop_shorter, g__kafIniTop_shorter, g__kafIniTop_shorter,
	// g__kafIniTop_shorter, -- no beF
	g__kafIniTop_shorter, g__kafIniTop_shorter, g__kafTop_bj_short,/*jm*/ g__kafIniTop_shorter, g__kafIniTop_shorter,
	g__kafIniTop_shorter, g__kafIniTop_shorter, g__kafIniTop_shorter, g__kafIniTop_shorter, g__kafIniTop_shorter,
	g__kafTop_m_bogus,/*mm*/ g__kafIniTop_shorter, g__kafIniTop_shorter, g__kafIniTop_shorter, g__kafIniTop_shorter,
	g__kafIniTop_shorter, g__kafIniTop_shorter, g__kafIniTop_shorter, g__kafIniTop_shorter, g__kafTop_bj_short,/*by*/
	csGafIni_top_shorter
);

// Note that for a few initials, we use the short versions instead of the shorter, and there are special
// forms for By and Jm forms.
csGafMed_top_shorter = (
	g__gafMedTop_shorter, g__gafMedTop_shorter, g__gafMedTop_shorter, g__gafMedTop_shorter, g__gafMedTop_shorter,
	g__gafMedTop_shorter, g__gafMedTop_shorter, g__gafMedTop_short,/*jm*/ g__gafMedTop_shorter, g__gafMedTop_shorter,
	g__gafMedTop_shorter, g__gafMedTop_shorter, g__gafMedTop_shorter, g__gafMedTop_shorter, g__gafMedTop_shorter,
	g__gafMedTop_shorter, g__gafMedTop_shorter, g__gafMedTop_shorter, g__gafMedTop_shorter,
	// g__gafMedTop_shorter, -- Dk
	g__gafMedTop_shorter, g__gafMedTop_shorter, g__gafMedTop_shorter, g__gafMedTop_shorter, g__gafMedTop_short/*by*/
);

csKafMed_top_shorter = (
	g__kafMedTop_shorter, g__kafMedTop_shorter, g__kafMedTop_shorter, g__kafMedTop_shorter, g__kafMedTop_shorter,
	g__kafMedTop_shorter, g__kafMedTop_shorter, g__kafMedTop_short,/*jm*/ g__kafMedTop_shorter, g__kafMedTop_shorter,
	g__kafMedTop_shorter, g__kafMedTop_shorter, g__kafMedTop_shorter, g__kafMedTop_shorter, g__kafMedTop_shorter,
	g__kafMedTop_shorter, g__kafMedTop_shorter, g__kafMedTop_shorter, g__kafMedTop_shorter,
	// g__kafMedTop_shorter, -- Dk
	g__kafMedTop_shorter, g__kafMedTop_shorter, g__kafMedTop_shorter, g__kafMedTop_shorter, g__kafMedTop_short,/*by*/
	csGafMed_top_shorter
);

csGafIM_top_shorter = (csGafIni_top_shorter, csGafMed_top_shorter);
csKafIM_top_shorter = (csKafIni_top_shorter, csKafMed_top_shorter);

// only a handful of these forms are actually used (final heh-goal, beh, tah, feh)
csKafIni_top_taller = (
	g__kafIniTop_taller, g__kafIniTop_taller, g__kafIniTop_taller, g__kafIniTop_taller,
	// g__kafIniTop_taller, -- no beF
	g__kafIniTop_taller, g__kafIniTop_taller, g__kafTop_m_bogus/*jm*/, g__kafIniTop_taller, g__kafIniTop_taller,
	g__kafIniTop_taller, g__kafIniTop_taller, g__kafIniTop_taller, g__kafIniTop_taller, g__kafIniTop_taller,
	g__kafTop_m_bogus,/*mm*/ g__kafIniTop_taller, g__kafIniTop_taller, g__kafIniTop_taller, g__kafIniTop_taller,
	g__kafIniTop_taller, g__kafIniTop_taller, g__kafIniTop_taller, g__kafIniTop_taller, g__kafTop_m_bogus/*by*/,

	g__gafIniTop_taller, g__gafIniTop_taller, g__gafIniTop_taller, g__gafIniTop_taller, 
	// g__gafIniTop_taller, -- no beF
	g__gafIniTop_taller, g__gafIniTop_taller, g__kafTop_m_bogus/*jm*/, g__gafIniTop_taller, g__gafIniTop_taller,
	g__gafIniTop_taller, g__gafIniTop_taller, g__gafIniTop_taller, g__gafIniTop_taller, g__gafIniTop_taller,
	g__kafTop_m_bogus,/*mm*/ g__gafIniTop_taller, g__gafIniTop_taller, g__gafIniTop_taller, g__gafIniTop_taller,
	g__gafIniTop_taller, g__gafIniTop_taller, g__gafIniTop_taller, g__gafIniTop_taller, g__kafTop_m_bogus/*by*/
);


csKafMed_top_tall = (
	g__kafMedTop_tall, g__kafMedTop_tall, g__kafMedTop_tall, g__kafMedTop_tall, g__kafMedTop_tall, 	// Be,BeM1,BeM2,BeRe,BeNn
	g__kafMedTop_tall, g__kafMedTop_tall, g__kafTop_jm_tall,/*jm*/ g__kafMedTop_tall, g__kafMedTop_tall, // BeHg,BeF,Jm,Re,Sn
	g__kafMedTop_tall, g__kafMedTop_tall, g__kafMedTop_tall, g__kafMedTop_tall, g__kafMedTop_tall,      // Sd, Ta, Ai, Fe, Qf
	g__kafMedTop_tall, g__kafMedTop_tall, g__kafMedTop_tall, g__kafMedTop_tall, 						// Mm, MmX,Nn, Dk,
	// g__kafMedTop_tall -- Dk
	g__kafMedTop_tall, g__kafMedTop_tall, g__kafMedTop_tall, g__kafMedTop_tall,							// HgM, HgF, Hd, Ch, 
	g__kafTop_m_bogus,	  // By

	g__gafMedTop_tall, g__gafMedTop_tall, g__gafMedTop_tall, g__gafMedTop_tall, g__gafMedTop_tall,	// Be,BeM1,BeM2,BeRe,BeNn
	g__gafMedTop_tall, g__gafMedTop_tall, g__gafTop_bj_tall,/*jm*/ g__gafMedTop_tall, g__gafMedTop_tall, // BeHg,BeF,Jm,Re,Sn
	g__gafMedTop_tall, g__gafMedTop_tall, g__gafMedTop_tall, g__gafMedTop_tall, g__gafMedTop_tall,       // Sd, Ta, Ai, Fe, Qf
	g__gafMedTop_tall, g__gafMedTop_tall, g__gafMedTop_tall, g__gafMedTop_tall,					 // Mm, MmX,Nn, Dk,
	// g__gafMedTop_tall - no Dk
	g__gafMedTop_tall, g__gafMedTop_tall, g__gafMedTop_tall, g__gafMedTop_tall, 	// HgM, HgF, Hd, Ch,
	g__kafTop_m_bogus	// By
);

// not used:
//csKafIM_top_tall = (csKafIni_top_taller, csKafMed_top_tall);

/*** not used
csKafIni_top_medshort = (
	g__kafIniTop_medshort, g__kafIniTop_medshort, g__kafIniTop_medshort, g__kafIniTop_medshort,	
	// g__kafIniTop_medshort, -- no beF
	g__kafIniTop_medshort, g__kafIniTop_medshort, g__kafIniTop_bj_tall,--jm/ g__kafIniTop_medshort, g__kafIniTop_medshort,
	g__kafIniTop_medshort, g__kafIniTop_medshort, g__kafIniTop_medshort, g__kafIniTop_medshort, g__kafIniTop_medshort,
	g__kafIniTop_m_bogus,--mm/ g__kafIniTop_medshort, g__kafIniTop_medshort, g__kafIniTop_medshort, g__kafIniTop_medshort,
	g__kafIniTop_medshort, g__kafIniTop_medshort, g__kafIniTop_medshort, g__kafIniTop_medshort, g__kafTop_jm_tall,--by/

	g__gafIniTop_medshort, g__gafIniTop_medshort, g__gafIniTop_medshort, g__gafIniTop_medshort, 
	// g__gafIniTop_medshort, -- no beF
	g__gafIniTop_medshort,  g__gafIniTop_medshort, g__gafTop_bj_tall,--jm/ g__gafIniTop_medshort, g__gafIniTop_medshort,
	g__gafIniTop_medshort, g__gafIniTop_medshort, g__gafIniTop_medshort, g__gafIniTop_medshort, g__gafIniTop_medshort,
	g__gafIniTop_m_bogus,--mm/ g__gafIniTop_medshort, g__gafIniTop_medshort, g__gafIniTop_medshort, g__gafIniTop_medshort,
	g__gafIniTop_medshort, g__gafIniTop_medshort, g__gafIniTop_medshort, g__gafIniTop_medshort, g__gafTop_bj_tall--by/
);
***/

csKafmed_top_medshort_noGaf = (
	g__kafMedTop_medshort, g__kafMedTop_medshort, g__kafMedTop_medshort, g__kafMedTop_medshort, g__kafMedTop_medshort,
	g__kafMedTop_medshort, g__kafMedTop_medshort, g__kafTop_jm_tall,/*jm*/ g__kafMedTop_medshort, g__kafMedTop_medshort,
	g__kafMedTop_medshort, g__kafMedTop_medshort, g__kafMedTop_medshort, g__kafMedTop_medshort, g__kafMedTop_medshort,
	g__kafMedTop_medshort, g__kafMedTop_medshort, g__kafMedTop_medshort, g__kafMedTop_medshort,
	// g__kafMedTop_medshort, -- Dk
	g__kafMedTop_medshort, g__kafMedTop_medshort, g__kafMedTop_medshort, g__kafMedTop_medshort, g__kafMedTop_medshort
);

csKafMed_top_medshort = (
	csKafmed_top_medshort_noGaf,
	g__gafMedTop_medshort, g__gafMedTop_medshort, g__gafMedTop_medshort, g__gafMedTop_medshort, g__gafMedTop_medshort,
	g__gafMedTop_medshort, g__gafMedTop_medshort, g__gafTop_bj_tall,/*jm*/ g__gafMedTop_medshort, g__gafMedTop_medshort,
	g__gafMedTop_medshort, g__gafMedTop_medshort, g__gafMedTop_medshort, g__gafMedTop_medshort, g__gafMedTop_medshort,
	g__gafMedTop_medshort, g__gafMedTop_medshort, g__gafMedTop_medshort, g__gafMedTop_medshort,
	// g__gafMedTop_medshort, -- Dk
	g__gafMedTop_medshort, g__gafMedTop_medshort, g__gafMedTop_medshort, g__gafMedTop_medshort, g__gafMedTop_medshort
);

// not used - initials never need their diagonal stroke shortened
//csKafIM_top_medshort = (cKafIni_top_medshort, cKafMed_top_medshort);

cKaf_top = (csKafIM_top_short, csKafIM_top_shorter, csKafIni_top_taller, csKafMed_top_tall, csKafMed_top_medshort);

// Round forms just have alternate forms, no separated bases and tops:
csKafRound_medium = (gKafIni, gGafIni, gKafMed, gGafMed);
csKafRound_short = (gKafIni_short, gGafIni_short, gKafMed_short, gGafMed_short);


cLam_short = (gLamIni_short, gLamMed_short);

//-------------------------------------------------------------------------------------------
//
// Isolate decomposing/recomposing
//

cs_behMark = (g__dot1l, g__dot2u, g__dot3u, g__smallTah, g__dot3l, g__dot2vl, g__ring__dot2u, g__dot2vu, g__dot3uD);
cs_behComposed = (gBeh, gTeh, gTheh, gTteh, gPeh, gBeeh, gTehRing, gTteheh, gTehThreeDotsAboveDownwards);

cs_jeemMark = (
	g__dot1l, g__dot1u, g__dot3l, g__dot2vl, g__dot2l, g__dot4l, g__smallTah, g__smallTahBelow,
	g__smallTah2dotsBelow, g__dot3u, gHamzaAbove, g__smallFourBelow);
cs_jeemComposed = (
	gJeem, gKhah, gTcheh, gDyeh, gNyeh, gTcheheh, gHahSmallTahAbove, gHahSmallTahBelow,
	gHahSmallTahTwoDots, gHahThreeDotsAbove, gHahHamzaAbove, gHahFourBelow);

cs_seenMark = (g__dot3u, g__dot4u, g__dot1l__dot1u, g__smallTah2dots, g__dot2vu,
	g__dot3l__dot3u, g__smallVinv, g__smallFourAbove);
cs_seenComposed = (
	gSheen, gSeenFourDotsAbove, gSeenDotBelowDotAbove, gSeenSmallTahTwoDots, gSeenTwoVertAbove,
	gSeenThreeDotsBelowThreeDotsAbove, gSeenInvertedVAbove, gSeenFourAbove);

cs_sadMark = (g__dot1u, g__dot1l__dot1u, g__dot3u);
cs_sadComposed = (gDad, gDadDotBelow, gSadThreeDotsAbove);

cs_fehMark = (g__dot1u, g__dot2u, g__dot3l, g__dot3u);
cs_fehComposed = (gFeh, gQaf, gFehThreeDotsBelow, gVeh);

cs_kafMark = (g__attachedRingMid, g__kafSquiggle, g__dot3u, g__dot2u);
cs_kafComposed = (gKafRing, gArabicKaf, gKafThreeDotsAbove, gArabicKafTwoDotsAbove);

cs_gafMark = (g__dot2vl, g__dot2u, g__attachedRingMid);
cs_gafComposed = (gGueh, gNgoeh, gGafRing);

cs_noonMark = (
	g__dot1u, g__noDot1u, g__dot1u_smallTah, g__dot1l__dot1u, g__smallTah,
	g__dot1u_smallV, g__ring__dot1u); // g__dot1u_ngMark
cs_noonComposed = (
	gNoon, gNoonGhunna, gNoonRetro, gNoonDotBelow, gRnoon,
	gNoonSmallV, gNoonRing);

cs_hehGoalMark = (g__hehHook_small, g__hehHook__dot2u, gHamzaAbove, g__hamza, g__hehHook__hamza);
cs_hehGoalComposed = (gHehGoal, gTehMarbutaGoal, gHehGoalHamza, gHehGoalHamza, gHehGoalHamza);

cs_chotiyehMark = (g__noDot2l, g__dot2l__hamza, g__dot2l, g__dot2vl, g__dot2l__smallV, g__dot2l_tail, g__ring
	g__smallTwoAbove, g__smallThreeAbove, g__smallFourBelow);
cs_chotiyehComposed = (gChotiyeh, gYehHamzaAbove, gYeh, gArabicE, gYehSmallV, gYehTail, gKashmiriYeh,
	gYehTwoAbove, gYehThreeAbove, gYehFourBelow);

///cs_chotiyehFinMark2Dots = (g__dot2l__hamza, g__dot2l__smallV);
///cs_chotiyehFinMarkNoDots = (gHamzaAbove, g__smallV);

///cs_chotiyehFinMark = (g__noDot2l, g__dot2l_tail, g__ring);
///cs_chotiyehFinComposed = (csChotiyehFin, csYehTailFin, csKashmiriYehFin);

cs_alefMark = (gHamzaAbove, gHamzaBelow, gMaddaAbove, g__wavyHamza,
	gWavyHamzaBelow, g_highHamza, g__smallTwoAbove, g__smallThreeAbove, g__wasla);
cs_alefComposed = (gAlefHamzaAbove, gAlefHamzaBelow, gAlefMaddaAbove, gAlefWavyHamzaAbove,
	gAlefWavyHamzaBelow, gHighHamzaAlef, gAlefTwoAbove, gAlefThreeAbove, gAlefWasla);
// For creating precomposed forms:
cs_alefMark2Prec = (cs_alefMark, g__hamza);
cs_alefComposed2Prec = (cs_alefComposed, gAlefHamzaAbove);


cs_dalMark = (g__dot1u, g__smallTah, g__dot1l__smallTah, g__dot2vl__smallTah, g__dot1l, g__attachedRing,
	g__dot4u, g__dot3l);
cs_dalComposed = (gThal, gDdal, gDalDotBelowSmallTah, gDalTwoVertBelowSmallTah, gDalDotBelow, gDalRing,
	gDalFourDotsAbove, gDul);

cs_rehMark = (g__dot1u, g__smallTah, g__dot3u, g__dot1l, g__dot1l__dot1u, g__dot2u, g__attachedRing,
	g__dot4u, g__dot2vu, gHamzaAbove, g__smallTah2dots, g__smallVBelow);
cs_rehComposed = (gZain, gRreh, gJeh, gRehDotBelow, gRehDotBelowDotAbove, gRehTwoDotsAbove, gRehRing,
	gRehFourDotsAbove, gRehTwoVertAbove, gRehHamzaAbove, gRehSmallTahTwoDots, gRehSmallVBelow);

cs_wawMark = (gHamzaAbove, g__attachedRingMid, g__barWaw, g__smallV, g__smallVinv, gPeshWaw,
	g__verticalStroke, g__dot1u, g__dot2u, g__dot3u, g__smallTwoAbove, g__smallThreeAbove);
cs_wawComposed = (gWawHamzaAbove, gWawRing, gKirghizOe, gOe, gKirghizYu, gArabicU,
	gYu, gWawDotAbove, gWawTwoDotsAbove, gVe, gWawTwoAbove, gWawThreeAbove);
// For creating precomposed forms:
cs_wawMark2Prec = (cs_wawMark, g__hamza);
cs_wawComposed2Prec = (cs_wawComposed, gWawHamzaAbove);

cs_bariyehMark = (g__noDot2l, g__dot2l__hamza, g__smallTwoAbove, g__smallThreeAbove);
cs_bariyehComposed = (gBariyeh, gBariyehHamza, gBariyehTwoAbove, gBariyehThreeAbove);


//-------------------------------------------------------------------------------------------
//
// Other stuff
//

cNuqtaUpperLarge = (cDot3u, cDot4u, g__dot2vu, g__smallTah, g__smallTah2dots, g__dot1u_smallTah, 
	g__dot1u_smallV, g__dot1u_smallVKf, g__dot1u_ngMark, g__dot2l__hamza, g__verticalStroke);
cNuqtaUpperSmall = (cDot1u, cDot2u);

cBaseTall = (cLamIni, cLamMed, cTahIni, cTahMed);
cBaseTall -= (gLamIni_short, gLamMed_short);


cLam_noBar_postKaf = (gLamMedBe, gLamMedBy, gLamFin);
cLam_tallForBar_postKaf = (gLamMedBe_kfTall, gLamMedBy_kfTall, gLamFin_kfTall)

cLam_noBar_postGaf = (gLamMedCh);
cLam_tallForBar_postGaf = (gLamMedCh_gfTall)

cLam_tallForBar = (cLam_tallForBar_postKaf, cLam_tallForBar_postGaf);

cKafNoIso = (cKafIM cKafFin csKafIM_base);

// We could add isolates and finals to this class, but it is currently only used
// for letters that get very high.
cVerticalStem = (cLamIni cLamMed cTahIni cTahMed);
// Nuqta-like things don't have to stay centered over this one:
cVerticalStem -= (gTahIniKf gTahMedKf);

csNuqtaPlusMark = (g__dot1u_smallV, g__dot1u_smallTah);
csNuqtaPlusMarkKf = (g__dot1u_smallVKf, g__dot1u_smallTahKf);


// Kaf exclusion glyphs

gKafMed {collexclude.glyph = g__kaf_exclude};
gKafMedBe {collexclude.glyph = g__kaf_exclude};
gKafMedBeF {collexclude.glyph = g__kaf_exclude};
gKafMedBeM1 {collexclude.glyph = g__kaf_exclude};
gKafMedBeM2 {collexclude.glyph = g__kaf_exclude};
gKafMedJm {collexclude.glyph = g__kaf_exclude};
gKafMedJm_lowentry {collexclude.glyph = g__kaf_exclude};
gKafMedJm_short {collexclude.glyph = g__kaf_exclude};
gKafMedJm_tall {collexclude.glyph = g__kaf_exclude};
gKafMedRe {collexclude.glyph = g__kaf_exclude};
gKafMedSn {collexclude.glyph = g__kaf_exclude};
gKafMedSd {collexclude.glyph = g__kaf_exclude};
gKafMedTa {collexclude.glyph = g__kaf_exclude};
gKafMedAi {collexclude.glyph = g__kaf_exclude};
gKafMedFe {collexclude.glyph = g__kaf_exclude};
gKafMedQf {collexclude.glyph = g__kaf_exclude};
gKafMedMm {collexclude.glyph = g__kaf_exclude};
gKafMedMmX {collexclude.glyph = g__kaf_exclude};
gKafMedNn {collexclude.glyph = g__kaf_exclude};
gKafMedHgM {collexclude.glyph = g__kaf_exclude};
gKafMedHgF {collexclude.glyph = g__kaf_exclude};
gKafMedHd {collexclude.glyph = g__kaf_exclude};
gKafMedCh {collexclude.glyph = g__kaf_exclude};
gKafMedBy {collexclude.glyph = g__kaf_exclude};
gKafMedDk {collexclude.glyph = g__kaf_exclude};
gKafMedBeRe {collexclude.glyph = g__kaf_exclude};
gKafMedBeNn {collexclude.glyph = g__kaf_exclude};
gKafMedBeHg {collexclude.glyph = g__kaf_exclude};
gGafMed {collexclude.glyph = g__kaf_exclude};
gGafMedBe {collexclude.glyph = g__kaf_exclude};
gGafMedBeF {collexclude.glyph = g__kaf_exclude};
gGafMedBeM1 {collexclude.glyph = g__kaf_exclude};
gGafMedBeM2 {collexclude.glyph = g__kaf_exclude};
gGafMedJm {collexclude.glyph = g__kaf_exclude};
gGafMedJm_lowentry {collexclude.glyph = g__kaf_exclude};
gGafMedJm_short {collexclude.glyph = g__kaf_exclude};
gGafMedJm_tall {collexclude.glyph = g__kaf_exclude};
gGafMedRe {collexclude.glyph = g__kaf_exclude};
gGafMedSn {collexclude.glyph = g__kaf_exclude};
gGafMedSd {collexclude.glyph = g__kaf_exclude};
gGafMedTa {collexclude.glyph = g__kaf_exclude};
gGafMedAi {collexclude.glyph = g__kaf_exclude};
gGafMedFe {collexclude.glyph = g__kaf_exclude};
gGafMedQf {collexclude.glyph = g__kaf_exclude};
gGafMedMm {collexclude.glyph = g__kaf_exclude};
gGafMedMmX {collexclude.glyph = g__kaf_exclude};
gGafMedNn {collexclude.glyph = g__kaf_exclude};
gGafMedHgM {collexclude.glyph = g__kaf_exclude};
gGafMedHgF {collexclude.glyph = g__kaf_exclude};
gGafMedHd {collexclude.glyph = g__kaf_exclude};
gGafMedCh {collexclude.glyph = g__kaf_exclude};
gGafMedBy {collexclude.glyph = g__kaf_exclude};
gGafMedDk {collexclude.glyph = g__kaf_exclude};
gGafMedBeRe {collexclude.glyph = g__kaf_exclude};
gGafMedBeNn {collexclude.glyph = g__kaf_exclude};
gGafMedBeHg {collexclude.glyph = g__kaf_exclude};
gGafMedKf_lm {collexclude.glyph = g__kaf_exclude};
gKafMedBe_base {collexclude.glyph = g__kaf_exclude};
gKafMedBeM1_base {collexclude.glyph = g__kaf_exclude};
gKafMedBeM2_base {collexclude.glyph = g__kaf_exclude};
gKafMedBeRe_base {collexclude.glyph = g__kaf_exclude};
gKafMedBeNn_base {collexclude.glyph = g__kaf_exclude};
gKafMedBeHg_base {collexclude.glyph = g__kaf_exclude};
gKafMedBeF_base {collexclude.glyph = g__kaf_exclude};
gKafMedJm_base {collexclude.glyph = g__kaf_exclude};
gKafMedRe_base {collexclude.glyph = g__kaf_exclude};
gKafMedSn_base {collexclude.glyph = g__kaf_exclude};
gKafMedSd_base {collexclude.glyph = g__kaf_exclude};
gKafMedTa_base {collexclude.glyph = g__kaf_exclude};
gKafMedAi_base {collexclude.glyph = g__kaf_exclude};
gKafMedFe_base {collexclude.glyph = g__kaf_exclude};
gKafMedQf_base {collexclude.glyph = g__kaf_exclude};
gKafMedMm_base {collexclude.glyph = g__kaf_exclude};
gKafMedMmX_base {collexclude.glyph = g__kaf_exclude};
gKafMedNn_base {collexclude.glyph = g__kaf_exclude};
gKafMedDk_base {collexclude.glyph = g__kaf_exclude};
gKafMedHgM_base {collexclude.glyph = g__kaf_exclude};
gKafMedHgF_base {collexclude.glyph = g__kaf_exclude};
gKafMedHd_base {collexclude.glyph = g__kaf_exclude};
gKafMedCh_base {collexclude.glyph = g__kaf_exclude};
gKafMedBy_base {collexclude.glyph = g__kaf_exclude};

gKafFin {collexclude.glyph = g__kaf_exclude};
gGafFin {collexclude.glyph = g__kaf_exclude};
gKafFin_squiggle {collexclude.glyph = g__kaf_exclude};


// Teh-ring alternate forms:
csBehNoRing = (gBehIniHd, gBehMedHd, gBehMedJm, gBehMedMm, gBehMedMmX,
	gBehMedNn, gBehMedNn_hgbm, gBehMedSn);
csBehTehRing = (gBehIniHdR, gBehMedHdR, gBehMedJmR, gBehMedMmR, gBehMedMmXR,
	gBehMedNnR, gBehMedNn_hgbmR, gBehMedSnR);


// Basic classes for contextual shaping:
#include "nastaliq_cntxlClasses.gdh"


endtable;  // glyph
